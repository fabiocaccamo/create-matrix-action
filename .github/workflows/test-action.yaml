name: Test Action
on:
  push:
  pull_request:
  workflow_dispatch:

jobs:

  prepare:

    runs-on: ubuntu-latest

    steps:

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Create matrix
        id: create_matrix
        uses: ./
        with:
          matrix: |
            python-version {2.7}, django-version {1.7,1.8,1.9,1.10,1.11}, database {sqlite,mysql,postgres}
            python-version {3.7}, django-version {2.0,2.1,2.2,3.0,3.1,3.2}, database {sqlite,mysql,postgres}
            python-version {3.8}, django-version {2.2,3.0,3.1,3.2,4.0,4.1}, database {sqlite,mysql,postgres}
            python-version {3.9}, django-version {2.2,3.0,3.1,3.2,4.0,4.1}, database {sqlite,mysql,postgres}
            python-version {3.10}, django-version {3.2,4.0,4.1}, database {sqlite,mysql,postgres}
            python-version {3.11}, django-version {4.1}, database {sqlite,mysql,postgres}

    outputs:
      matrix: ${{ steps.create_matrix.outputs.matrix }}

  test:

    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include: ${{fromJson(needs.prepare.outputs.matrix)}}

    steps:
      - uses: actions/checkout@v3

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          cache: 'pip'

      - name: Upgrade pip version
        run: |
          python -m pip install --upgrade pip

      - name: Install django
        run: |
          pip install "Django == ${{ matrix.django-version }}.*"

      - name: Debug matrix
        run: |
          echo "Python ${{ matrix.python-version }} + Django ${{ matrix.django-version }} + Database ${{ matrix.database }}"
          echo "Python: `python --version`"
          echo "Django: `django-admin --version`"

